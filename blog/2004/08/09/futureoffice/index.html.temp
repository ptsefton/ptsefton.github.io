<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: XHTML as a word processing format
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td> </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>XHTML as a word processing format</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2004/index.html">2004</a>-<a href="/blog/2004/08/index.html">08</a>-<a href="/blog/2004/08/09/index.html">09</a>
<p>
I have been thinking about Tim Bray's <a class="external" href="http://www.tbray.org/ongoing/When/200x/2004/07/20/AuthoringPain">plaintive plea for an XHTML-based word processor</a>. I started writing down the requirements, looking at features that would need to be in and out of such a product, but I reached the conclusion, eventually, that any attempt to write yet another word processor will end up (a) as a niche product for some corner of the web, or (b) turn into another office suite, and therefore not happen. These ruminations led me to my post on the <a class="external" href="http://localhost:8000/blog/2004/08/02/the_best_thing_about_blogs">benefits of  blogging software</a>, about how blogs implement the separation between content and presentation/navigation. That is, blogging and some Content Management System, (CMS) software lets you author pages without all the wrapping that makes the content into a web site.
</p>
<p>
I have decided the way forward is to adapt the existing leading word processors using their programmable interfaces (APIs), their template and style systems, and their macro languages that make them programmable.
</p>
<p>
Tim Bray has updated his post to include some feedback that OpenOffice.org is the product to do this:
</p>
<p>
</p><blockquote><a class="external" href="http://www.geof.net/blog/index.html">Geof Glass</a> says: “I think you answered your own question about a good HTML content authoring tool some time ago - it’s a standard XSLT export filter for Open Office. The OO.o tags are close to XHTML so transformation is easy (though I haven't done tables). It separates content and style - which is essential. And for non-web distribution you aren't bound by the limitations of the web (e.g. problems with paged media in existing CSS implementations).” <a class="external" href="http://kuoi.asui.uidaho.edu/%7Ekamikaze/read.php?topic=News&amp;id=14">Mark Hughes</a> would agree. </blockquote>
<p>
I agree, provided the export filter for OpenOffice.org can export images.  But I don't think it's just OO.o that's a contender. MS Word (is that MS.W?) can be made to export to XHTML, probably with less work than OO.o. Next step would be to set up common style names between the two of them with base styles that map to HTML elements, and some domain specific sets of styles and conventions (the conventions are for when we reach the limits of styles). I have a fair bit of experience in this matter, so as of tonight, I am beginning a series of small articles that work through the design of such a system. 
</p>
<p>
I think a well thought-out set of styles and some macro/API work in both packages will result in a really useful constellation of opportunities, including the ability to edit documents in your geek-tool-of-choice, such as Emacs and use OpenOffice to render nice print, and to generate Word documents that lesser mortals, such as lawyers, can edit and give back to you. The key to all of this is to interface to some kind of Content Management System that knows how to accept content into a scalable website without the author doing DreamWeaver or FrontPage style site management. The obvious protocol for this will be Atom - if it ends up with the required scope.
</p>
<p>
At this stage I think that there are really only two contenders for existing word processors. MS.W and OO.o. (and yes I have chased down lots of the links that sprouted from Tim Bray's post, and visited lots of interesting places), although it occurred to me today that WordPerfect ought to be in there too; it's also mature and even has an inbuilt XML editor. I have downloaded the trial, to have a play. At this stage the XML support looks just like the SGML support I remember from five-ish years ago  that is frustratingly close to useful. We'll see.
</p>
<p>
Maybe a new XHTML based word processor application <i>will</i> emerge from the recent discussions, but I'm not holding my breath. I'll keep an eye on <a class="external" href="http://muux.com/wp/pages/Discussions%20elsewhere">this site, dedicated to the idea of a XHTML + CSS for word processing</a>, which links back here.
</p>
<p>
Finally, I include here my draft notes on the feature set that needed to be in a new Word processor, even though I am now going to forget about this and work on adapting the <i>old</i> ones.
</p>
<p>
This new word processor needs to:
</p>
<ul><li>Be usable for print as well as web, not necessarily optimised, but ''usable' - certainly needs to be able to make PDF.</li></ul>
<ul><li>Have a default drawing (and maybe paint) package included. And this will lead to spreadsheets and presentation (PowerBloodyPoint) as well, you mark my words.</li></ul>
<ul><li>Have the usual spelling checker and styles (which would map directly to CSS, of course).</li></ul>
<ul><li>Be able to import the common word processing formats with (at least) the text and tables intact. It would be nice to map existing styles to CSS and to HTML elements.</li></ul>
<ul><li>Be able to tidy existing HTML resources.</li></ul>
<ul><li>NOT be able to export in common word processing formats. Think about it.</li></ul>
<ul><li>Use an Atom (or other) repository in preference to the file system.</li></ul>
<ul><li>Have file / FTP / WebDAV export.</li></ul>
<ul><li>Most emphatically NOT have DreamWeaver or FrontPage-like ability to mange entire webs - this will be the task of the Atom (or other) repository.</li></ul>
<ul><li>Ship with an inbuilt set of classes for semantic markup.</li></ul>
</body>
</html>