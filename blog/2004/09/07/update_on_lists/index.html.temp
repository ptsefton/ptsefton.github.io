<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: Update on lists
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td> </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>Update on lists</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2004/index.html">2004</a>-<a href="/blog/2004/09/index.html">09</a>-<a href="/blog/2004/09/07/index.html">07</a>
<p>
I have been making slow progress on the Word Processing Interoperability project. Over the last couple of weeks I have worked on OpenOffice.org. It's not perfect, and lags behind Word in some areas but it really is open in some important ways. There are two small technical triumphs I would like to report on as I work towards an actual downloadable template. It's technical stuff.
</p>
<p>
First of all, the OO.o file format is a zip file, containing a fragmented version of a document with all the textual content and metadata in XML. I am interested in the word processing component for this project, and I was able to take the default  'blank' document that is built in to the product, save it as a template, and add the new <a href="wp-interop-styles">styles and lists for the WP Interop project</a>. It was trivially easy to take the default 'style.xml' file which, weirdly, contains the style definitions, and add new definitions to it using an XSLT stylesheet to automatically create both a paragraph style and a list style (if required) for a representative sample of the styles we will need. 
</p>
<p>
This is a great job for a computer, building styles that are easily parameterized. The same is presumably possible in Word using an XML-ized version of a document, but it is easy to do in Word's macro language, and there is an existing macro from my past we can adapt. 
</p>
<p>
The bad news about OO.o is that the macro language is a horror, worse by far the Word's VBA and recording a macro to generate lists generates a tiny bit of usable code, some commented-out code (!) and some big gaps where it records nothing. Lucky the file format is easy to hack. And another thing about OO.o; while it has an 'export as XHTML' with a hackable stylesheet, it only works properly for images if you run the stylesheet on a saved document that you have unzipped.
</p>
<p>
The second trick was also easy but it took two weeks of very part-time mucking around to figure it out, during which time I explored all sorts of dead-end solutions that weren't.
</p>
<p>
The problem was how to take a flat list of lists as spat-out by OO.o (leaving out the items in the lists):
</p>
<p>
</p><pre>&lt;text:unordered-list text:style-name="l1<b>"&gt;
...
&lt;/text:unordered-list&gt;
&lt;text:unordered-list text:style-name="l2</b>"&gt;
...
&lt;/text:unordered-list&gt;
&lt;text:unordered-list text:style-name="l1<b>"&gt;
...
&lt;/text:unordered-list&gt;</b></pre>
<p>
And get the middle list to embed in the first and the third to become part of the first.
</p>
<p>
</p><pre>&lt;ul class="l1"&gt; 
... 
&lt;li&gt; …&lt;ul class="l2*"&gt; ... &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</pre>
<p>
I worked out early on that the solution was going to involve processing item by item using the 'following-sibling' axis. So you start with the first list, and it will call the next one, which may become embedded in the first. The trick is to take two runs at it. One in 'embed' mode, where you let things nest in each other, the second in 'find-more-at-the-same-level' mode, where you ignore anything that is embeddable and look for the continuation of the list you are already in, both of them called recursively. 
</p>
<p>
Code for both of the above is coming as part of a first-release OO.o Writer template, as soon as I have enough to be usable. Maybe later this week.
</p>
</body>
</html>