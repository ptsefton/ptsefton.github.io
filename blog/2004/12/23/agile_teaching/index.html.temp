<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: Agile Teaching (and Learning)
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td>Â </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>Agile Teaching (and Learning)</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2004/index.html">2004</a>-<a href="/blog/2004/12/index.html">12</a>-<a href="/blog/2004/12/23/index.html">23</a>
<p>
I have been thinking for years about features for content management applications, and for online learning software, which eventually got me thinking about features for teachers. Not the features the teachers need in their software (and not the size of the teacher's nose), but the features the <i>learners</i> (remember them?) need in their teachers. So, since I'm going to be a <i>Senior Research Technologist in Flexible Learning Systems</i> come 2005-01-01, I thought I'd better do some research, starting with asking our local experts. 
</p>
<p>
A more detailed post on "Teacher Features" will be forthcoming when I get my head around it and talk to a few more people, and read the stuff they recommend to me, but I'd like to report on an insight I got from talking to one expert online educator today on the phone.
</p>
<p>
I've asked a few people about "Teacher Features" but <a class="external" href="http://www.usq.edu.au/users/reushle/">Shirley Reushle</a> is so far the quickest with a usable quote, which I was too slow to write down verbatim (well I tried, but now I can't read it).
</p>
<p>
Key points:
</p>
<ul><li>Onine teachers need a strong theoretical background in contemporary pedagogical theory.</li></ul>
<ul><li>And they have to understand constructivism, what it means to work with interaction, collaboration, activities, empathy.</li></ul>
<p>
We talked about the teachers, and then a little about software to support them, and the small role that content plays in successful online learning (but I still think it's <a class="external" href="http://ptsefton.com/blog/2004/12/03/e_publishing_worthwhile">worth looking after the content well</a>). 
</p>
<p>
I have recently formed the opinion that teachers like Shirley could get people to learn under wet cement, but when I put it to her that a decent features set in the teacher would be more important than features in software, she was quick to reply that the software needed to be seamless, responsive and flexible. And if it wasn't it would <i>not be used</i>. (But I've heard Shirley talk about how she has used the far from seamless patchwork of tools we used to provide at NextEd to deliver educational experiences with transcendent results).
</p>
<p>
Anyway, the point of this piece is that after a few minutes of talking to Shirley, the phrase "Agile Teaching" popped into my head, as she began talking about stuff like 'content free' courses where you abandon the planned content and take the group off in another direction, and the importance of continual evaluation rather than the current view of evaluation as a somewhat embarrassing growth on the outside of a course, amongst other things.
</p>
<p>
I was seeing parallels to Agile Programming Methodologies, the most famous of which is Extreme Programming, a useful set of tools for some kinds of software development with a name that still makes me cringe. The most striking similarity between Shirley's approach to online education and the XP approach is the way an undertaking is driven like a vehicle, with frequent, small course corrections; rather than a delusional commitment to pointing the nose in <i>that</i> direction and pressing the accelerator, hoping to arrive in a few months time. There's a lot about this in the <a class="external" href="http://c2.com/cgi/wiki?PlanningExtremeProgramming">Planning Extreme Programming</a> book.
</p>
<p>
Later: Asked Google about "Agile Teaching".
</p>
<p>
Number on hit is a <a class="external" href="http://www.cs.cityu.edu.hk/~hwchun/agile/">page on "The Agile Teaching/Learning Methodology"</a> by one Dr Andy Chun that says pretty much what flashed through my head when I talked to Shirley, (and Dr Chun even managed to remember to include the learners):
</p>
<p>
</p><blockquote>It turns out the software development process, in many ways, is similar to the teaching process. It involves multiple parties with different objectives (sometimes conflicting), a very tight schedule to get things done, a fixed deadline, limited resources and a lot of expected/unexpected changes along the way. The process requires detailed planning/scheduling, tracking and management with continuous assessment and feedback from all parties. Getting a software project done correctly and on time is not easy. Making a sure a course is taught properly and on schedule can also be a challenge sometimes. </blockquote>
<p>
I liked the discussion of extreme:
</p>
<p>
</p><blockquote>By extreme, I mean if something is good, we go to the extreme and do it constantly. If giving feedback to students on their learning is good, we should give feedback each class. Conversely, if getting feedback from students is good, we should allow students to give feedback whenever they want. If students learn better by teaching, they should be allowed to teach and share their knowledge constantly. </blockquote>
<p>
As a part-time computer programmer who has used and profited from agile programming, and worked to support teaching and learning systems I find this an interesting idea. I'm not saying that a young, somewhat cult-like, programming methodology could add much to education theory, just that it may be a good way to explain to our programmers what our teachers are doing and help us construct more flexible, responsive software; the sort we'd like to use to run <i>our</i> knowledge-building projects.
</p>
<p>
$LastChangedDate: 2005-01-07 05:03:57 -0600 (Fri, 07 Jan 2005) $
</p>
</body>
</html>