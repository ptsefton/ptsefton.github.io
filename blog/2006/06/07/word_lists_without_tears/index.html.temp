<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: Word lists without tears
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td> </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>Word lists without tears</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2006/index.html">2006</a>-<a href="/blog/2006/06/index.html">06</a>-<a href="/blog/2006/06/07/index.html">07</a>
<div><p class="P1">I have recently complained about the <b>appalling complexity of lists in Microsoft Word</b>. But actually lists in Word have not caused me much anxiety since that late nineties, when I designed the technique I'll describe here for managing lists without tears. Since I got access to a well set up template with a good way to access styles life in the word processor has been easy. I forgot what it was like without such a template when I started evaluating Word 2007 and <a href="http://ptsefton.com/blog/2006/05/29/lists_in_office_2007._not_pretty.">revisited some of the old issues</a>.</p><p>Here I will tell you in how to set up a set of lists with bullets, Roman numbering and alphabetic numbering that will let you nest lists inside each other, along with blockquotes and preformatted and HTML-style definition lists. </p><p>Actually, all you need to know is contained in the <a href="http://ice.usq.edu.au/instructions/downloads.htm">ICE word template</a> but I'll explain they key points here.</p><p>The key, of course, is to <b>use styles</b>. Styles are the solution to most word processing problems.</p><h1>
<a id="id802372" name="id802372"><!--id802372--></a>About styles</h1><p>There are three-and-a-half kinds of styles in Word.</p><dl><dt>Paragraph styles</dt><dd>These styles let you label your paragraphs with a style, and have them formatted automatically. You can say 'Heading 1' and get the correct formatting, maybe 18pt Helvetica font. Paragraph styles are at the heart of any usable Word processing system, and are particularly useful for driving good quality export to HTML, and for interoperating with other word processing systems.</dd><dd>It is possible in word to define paragraph styles that are linked to list formatting. For example you can set up a set of five styles “List Bullet 1” to “List Bullet 5” that are linked to five levels of a multilevel list.</dd><dt>Character styles</dt><dd>This is the same idea as paragraph styles, only for sub-paragraph text spans. They're useful but suffer from some limitations because they can not be layered. Character styles don't come into this discussion at all.</dd><dt>List styles</dt><dd>List styles were introduced to Word some time after Word 2000 and I don't know much about them. Why? Because I'm not interested in features that don't go back at least a few versions. So I might start to get interested in list styles in Word in about 2010, when Word 2000 is ten years old and the number of installed copies starts to fall off. (Or I may give in and get interested this afternoon).</dd><dd>Besides, list styles aren't needed to make usable lists in Word, because there is another style-like thing that lets you name multilevel lists. </dd><dd>(I'm going to ask my contact at Microsoft why there are two kinds of named list. I have no idea why styles were introduced instead of improving the interface to what was already there.)</dd><dt>Multilevel list names (these are the aforementioned half-a-style)</dt><dd>Multilevel lists arrived in Word 97. They are more-or-less a good idea. One can set up a hierarchical structure with different numbering properties at different levels and link each level to a style.</dd><dd>You can also name a multilevel list, but there are some real usability issues with this. See my recent<a href="http://ptsefton.com/blog/2006/05/11/a_word_plugin_for_opendocument%3F_maybe."> rant</a> on the subject.</dd><dd>My advice is to never, ever click on <code>Format / Bullets and Numbering...</code>. Get set up with good set of styles and keep your hands off it lest you go blind and/or insane. Not to mention getting hairs on your palms.</dd><dd></dd></dl><h1>
<a id="id801378" name="id801378"><!--id801378--></a>How we use lists in ICE</h1><p>In the ICE project we created a template which has several multilevel lists, all named, and all linked to styles. We have lists with bullets, numbering, upper and lowercase alphabetical numbering and upper and lower case Roman. There are also things that interoperate with lists that are not lists themselves, notably definition lists, and paragraphs that are used to continue a list item. </p><p>We use a custom menu to give access to the lists. Here's a screenshot from Windows, showing how I would apply a first level numbered list.</p><p><a id="graphics1" name="graphics1"><!-- --></a><img alt="graphics1" class="fr1" height="224" src="/blog/2006/06/07/word_lists_without_tears/1.png" width="480"/></p><p>You can make menus like this in Word pretty easily, look under Tools / Customize and you can create toolbars and drag and drop to create a menu.</p><p>Managing all this would be impossible using the GUI in Word, because it is incomplete, so we <b>use a set of macros</b> to create and re-create multilevel lists as needed. </p><p>Years ago, at Standards Australia, I worked with my team to write the first version of a macro to manage lists. Since then there have been contributions made by NextEd and USQ. At USQ we're slowly rewriting the macros to make them better, and eventually we will be able to publishing the rewritten ones under the GPL (the first ones I wrote were really awful, and while Standards an NextEd both made the template freely available there is no formal licensing on the code). The macros in question are a bit lengthy to put here, but if you download the ICE template you can find them. I'll just say here what each important bit does.</p><p>The current version of the ICE template has a single macro in the <code>ICE Toolbar</code>, called <code>Repair Lists</code>. This calls <code>repairListInstances</code> in the <code>OpenSource</code> module in the ICE template. I'll talk through the important code here (there's more, but if you can read code you can figure it out).</p><dl><dt><code>OpenSource.repairListInstances()</code></dt><dd>This is a fairly crude macro that visits every paragraph in the document and re-applies the style it is meant to be in, and based on the style name tries to work out whether lists need to be restarted. The algorithm is a bit dumb but the restart will work for most lists.</dd><dd>Interoperability with OpenOffice.org Writer is still a bit of a problem with this macro, as Writer has trouble preserving Word's list information when it imports .<code>doc</code> files. We're working on it.</dd><dd>But before this macro does its work it calls <code>ouline.setListOutlines().</code></dd><dt><code>ouline.setListOutlines()</code></dt><dd>This one first builds a list of multilevel lists that are already there, and (ugh) stores their names in a string. Then it is possible to go and create all the necessary multilevel lists, by first checking if they exist.</dd><dd>For each multilevel list the code then loops through five levels and creates the correct formatting (if you want different formatting, say a different indent quantum, you can hack the macro).</dd></dl><h1>
<a id="id803464" name="id803464"><!--id803464--></a>Other important styles</h1><p>There are some other styles that are indented like lists but don't really need to be Multilevel lists (although they could be if we got around to it). These are definition lists, as used in this post, blockquotes, and preformatted text for things like code samples, which I have spared you in this particular post.</p><p>The <a href="http://ice.usq.edu.au/">ICE team</a> (Pamela Glossp and Daniel de Byl in particular) have set up all these styles by hand, mostly using the GUI in Word, although I did some of the initial work by saving the a document in Word's HTML format and <i>search 'n' replacing</i> various formatting in the CSS block, then re-loading it and saving it as a template. </p><p>With the new XML-based formats coming we'll be able to hack Word templates just like we did OpenOffice.org, using similar techniques to the ones I <a href="http://www.xml.com/pub/a/2005/01/26/hacking-ooo.html">wrote about for xml.com</a>. This makes it much easier to generate large numbers of consistently formatted styles than you can manage by laboriously clicking through layer after layer of GUI.</p><h1>
<a id="id803529" name="id803529"><!--id803529--></a>What's the point?</h1><p>I've kind-of ignored the main reasons for doing all this so far in this post. But there are some really good reasons for going to all this trouble to get a template set up properly. I go on about interoperable word processing all the time here, so there's <a href="http://del.icio.us/ptsefton/ptsefton+wpinterop">plenty to read up on</a>. But I'll give you two reasons why this is important right here.</p><dl><dt>Authors can work without distraction</dt><dd>Instead of worrying about why lists are 'going crazy' or 'acting possessed' authors can be taught to use a single styles menu and need only run a fixup macro when things go awry. I'd almost go as far as to say this will reduce sick days in your organization but I can't prove it. </dd><dd>It <b>will make authors more productive</b>. And it will improve the consistency of documents produced in your shop.</dd><dd>(Stuart Stuple from Microsoft sent me draft document called something like <i>Lists in Word are not possessed</i> with an explanation of how to apply lists sensibly using the new Word 2007 interface. This is great stuff for the general populace who have to deal with Word directly, but <b>you</b> can bypass all of that and just use a template. Go on, <a href="http://ice.usq.edu.au/instructions/downloads.htm">download ours</a> and change it to look the way you want it.)</dd><dt>Documents can be exported to XHTML</dt><dd>Using a set of styles that is designed to export to XHTML means you <b>can export to XHTML</b>. True, the Word team are working on an XHTML export for blogs, but all the discussion that's been <a href="http://blogs.msdn.com/brian_jones/">posted by Brian Jones</a> so far is centred around mapping word formatting to XHTML formatting, not Word Styles to XHTML elements.</dd><dd><b>I'd love</b> to be able to offer you all a pure Word-based converter, but at the moment I don't have time.</dd><dd><b>I'd really love</b> it if Word had a place to plug-in something like an XSLT stylesheet (like OpenOffice.org) to build an export filter.</dd><dd><b>I'd really really love</b> it if Microsoft built something like ICE into the default template in Word and took care of the export, but I'm not holding my breath.</dd><dd><b>What I can offer</b> is that the ICE system can deal with Word .doc files and via OpenOffice.org can turn them into pretty decent XHTML.</dd><dd>Pretty soon the ICE team will be looking at replacing our XSLT stylesheets for turning <i>OpenDocument + ICE template</i> documents<b> into XHTML with straight Python code</b>. That Python code should be very easy to adapt to the new Open XML formats, and would be easy to port to other languages. The stylesheets are not easy to adapt, they involve a mind-bending and inefficient algorithm which I wrote but can no longer bear to maintain.</dd><dd>Or you could pick up on the Word to XML stuff I <a href="http://www.xml.com/pub/a/2004/12/08/word-to-xml.html">wrote about on xml.com</a> and get started on a <i>Word + ICE</i> to XHTML transform right now in the language of your choice.</dd></dl></div>
</body>
</html>