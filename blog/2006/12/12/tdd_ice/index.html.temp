<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: Tests on ICE
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td> </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>Tests on ICE</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2006/index.html">2006</a>-<a href="/blog/2006/12/index.html">12</a>-<a href="/blog/2006/12/12/index.html">12</a>
<div><style type="text/css">table {border-spacing: 0;empty-cells: show;} </style><p class="P1">Test-driven development. Test-first programming. A <b>Good Thing</b>.</p><p>The first part of the <a href="http://ice.usq.edu.au/">ICE system</a> to be written was an XSLT stylesheet that transformed open office XML into HTML, started before I joined USQ. Once we agreed on the GPL license I gave the copyright to USQ to look after when we kicked off the ICE project in mid 2005. The stylesheet was <b>really complicated</b> to write even though I based it on a GPL stylesheet that did some of the heavy lifting. I would never have got it working without the UTF-X test framework; I was able to work out the tricksy techniques I needed with a <b>bank of tests in place</b>. </p><p>When we switched to OpenOffice.org version 2 and the OpenDocument format, others in the ICE team added tests to deal with tables and so on.</p><p>Later on, Dr Ian Barnes of ANU, who's a computer scientist wrote a similar XSLT stylesheet to go from<b> Open Document format to DocBook XML</b>. He <a href="http://www.apsr.edu.au/publications/preservation_of_word_processing_documents.html">got his working too</a> (can't remember if he wrote tests) but even he said it was hard to figure out.</p><p>Anyway, more than a year into ICE's development cracks started to appear in the original stylesheet. <b>Profiling shows</b> that it's one of the slowest parts of the application, it breaks on some <b>long documents</b> and <b>nobody wants to touch</b> it tests or not. While XSLT can do the job it's not comfortable.</p><p>So, we decided to rewrite the XSLT in Python – using only native Python XML libraries, instead of the libxslt2 used elsewhere in ICE. This ism partly so we can look at turning our exporter into an OpenOffice plugin later on.</p><p>Enter Ron Ward. He worked out a state machine in Python that could <b>output nested HTML</b> from an essentially flat stream of paragraphs, shifting state based on ICE styles. As he worked, Ron converted UTF-X unit tests into a new test framework, working first on simple lists, then adding other structures. </p><p>Ron <b>worked entirely from the tests</b>, in amongst ICE maintenance jobs, and got all but a few things working, some of which he thought might be wrong anyway. I asked “have you tried rendering entire documents and looking at them”. No, he said, he didn't expect that to work. At my insistence hooked up the new renderer and we converted a site with a dozen documents or so using the new code. The result? <b>Nearly flawless</b>. There are a few odd things to investigate, but on the whole the thing just worked.</p><p>Instead of working the way a lot of us used to, by writing bits of code and eyeballing the output, writing code that broke other code, and <b>hoping</b> that everything was coming together, the automated unit-test suite made the focus on small, manageable units, and guarded against regression as the work proceeded. And while Ron was pretty sure that the test coverage wasn't good enough to cover everything it turned out to be <b>bloody close</b>.</p><p>So here's to test-driven development and one particular test-driven developer, Mr Ronald Ward.  And here's to Jacek Radajewski who brought <a href="http://utf-x.sourceforge.net/">UTF-X</a> into the world and continues to maintain it.</p><p>And by the way, I have just undertaken a minor document conversion task for a colleague, joining up a bunch of HTML documents and turning them into a single Word document. It was pretty simple, and I started to think I'd <b>just do it without tests</b>, but I quickly got tangled up. When I came to my senses it took less than a minute to set up a UTF-X test file, and only a few more to add tests for the bits and pieces of my file. </p><p></p><p></p><p></p></div>
</body>
</html>