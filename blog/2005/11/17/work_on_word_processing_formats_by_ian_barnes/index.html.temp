<html>
<head>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-898010-1";
urchinTracker();
</script>
<title>
ptsefton.com :: Work on word processing formats by Ian Barnes
</title>
</head>
<body>
<script type="text/javascript"><!--
google_ad_client = "pub-4309697012647581";
/* 728x90, created 2/10/08 */
google_ad_slot = "1205309022";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script>
<!-- SiteSearch Google -->
<form action="http://www.google.com/custom" method="get" target="_top">
<table bgcolor="#ffffff" border="0">
<tr><td align="left" height="32" nowrap="nowrap" valign="top">
</td>
<td nowrap="nowrap">
<input name="domains" type="hidden" value="ptsefton.com"/>
<label for="sbi" style="display: none">Enter your search terms</label>
<input id="sbi" maxlength="255" name="q" size="31" type="text" value=""/>
<label for="sbb" style="display: none">Submit search form</label>
<input id="sbb" name="sa" type="submit" value="Google Search"/>
</td></tr>
<tr>
<td> </td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input id="ss0" name="sitesearch" type="radio" value=""/>
<label for="ss0" title="Search the Web"><font color="#000000" size="-1">Web</font></label></td>
<td>
<input checked="" id="ss1" name="sitesearch" type="radio" value="ptsefton.com"/>
<label for="ss1" title="Search ptsefton.com"><font color="#000000" size="-1">ptsefton.com</font></label></td>
</tr>
</table>
<input name="client" type="hidden" value="pub-4309697012647581"/>
<input name="forid" type="hidden" value="1"/>
<input name="ie" type="hidden" value="ISO-8859-1"/>
<input name="oe" type="hidden" value="ISO-8859-1"/>
<input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1"/>
<input name="hl" type="hidden" value="en"/>
</td></tr></table>
</form>
<!-- SiteSearch Google -->
<h1>Work on word processing formats by Ian Barnes</h1>
<a href="/">Home</a>-<a href="/blog/index.html">blog</a>-<a href="/blog/2005/index.html">2005</a>-<a href="/blog/2005/11/index.html">11</a>-<a href="/blog/2005/11/17/index.html">17</a>
<div><p>On Wednesday I was a guest at the <b>Australian Partnership for Sustainable Repositories</b> (<a href="http://www.apsr.edu.au/">APSR</a>) planning day, which helped me get my head around the diverse  projects coordinated under the APSR banner. We're going to be talking a lot with APSR at the <a href="http://www.rubric.edu.au/">RUBRIC</a> project where I work.</p><p>The highlight for me was a talk by <a href="http://www.bloglines.com/blog/barnes">Ian Barnes</a> of <a href="http://www.anu.edu.au/">ANU</a> on Sustainability in word processing formats. He was looking at how you can take a word processing document and turn it into an archive-quality XML document.</p><p>I liked his presentation partly because Ian is working with our <a href="http://ice.usq.edu.au/">ICE</a> templates, developed at USQ. This is interesting because it means that our <b>open source project is working</b>:</p><ol class="lin"><li><p>we have <b>more smart people</b> testing and extending the styles, and </p></li><li><p>the ANU work is trying <b>new things</b>.</p></li></ol><p>Ian said that for a sustainable format you need something that is:</p><ol class="lin"><li><p>XML</p></li><li><p>Non proprietary, and open. (Ian said non-commercial)</p></li></ol><p>Here was the list of contenders for an archival document format:</p><ul class="lib"><li><p><a href="http://www.docbook.org/">DocBook</a></p></li><li><p><a href="http://www.tei-c.org/">TEI</a></p></li><li><p>XHTML</p></li><li><p>Custom schemas</p></li></ul><p>Ian voted off these two:</p><dl><dt>Custom schemas</dt><dd>Because of the costs and obvious unsustainability involved</dd><dt>XHTML</dt><dd>Because it is essentially flat. While XHTML does allow nesting, if you start using particular conventions for nesting elements then that's a custom schema, Ian argued. I'll come back to this point.</dd></dl><p>Ian <b>picked DocBook</b> for his demonstration system, and as a likely contender for long term document storage, because of the <b>existing toolchain</b>. </p><p>Using OpenOffice.org Writer, he was able to demonstrate a<b> complex ICE-based test document</b> that had all sorts of nested lists, block quotes and pre-formatted text and images. Saved it into a directory and was able to show via a Java-based web server (Cocoon) the original OpenDocument Format document (the XML), a <b>DocBook version</b> and then an <b>XHTML version</b>. It also does <b>PDF</b>.</p><p>I <b>liked </b>the new direction, and the idea of plugging into the <b>DocBook toolchain</b> because of all the stuff you get for nothing, but later discussions indicate there <b>might be some problems</b>, particularly with documents that mix numbered and un-numbered headings, and with jumps between heading levels (like putting heading 4 immediately after heading 1. What do you put in your archival format in a case like that where the author wants the feel of small divisions with a low-level heading, but the schema may insist that that is not allowed?</p><p>Which brings me to one of the <b>constraints on this exercise</b> – if you're going to be capturing with a word processor you need to live with what it's capable of, and your software will always have to build any nested structure out of a flat series of paragraphs and lists, so I'm not convinced that using DocBook buys all that much more than using existing tools, which could, in time be written for a constrained version of XHTML. But I am intrigued, and also am all for using existing software where possible so I'd like to <b>see how far</b> Ian and the ANU team can take this.</p><p>I got the chance to go into more detail with Ian after lunch (thanks APSR). He's got <b>a nice set of chained XSLT stylesheets</b> that turn the ICE styles in a word processing document into DocBook by doing one bit at a time. This is a more manageable approach that the one I took with the original ICE XSLT; at that stage I thought we'd need to have a single XSLT because I had this (very wrong) idea that the export system in OpenOffice.org was worth using.</p><p>But even with Ian's much simpler chain of stylesheets it's at the limits of the useful range for XSLT, it might be better to <b>switch to a procedural version</b> using a 'normal' language like Java or Python. There's someone else working on this that I know of, but no release yet.</p><p></p><p></p><p></p><p><b></b></p></div>
</body>
</html>